{"version":3,"sources":["components/Buttons/SubmitButton.js","components/Buttons/DeleteButton.js","components/Buttons/EditButton.js","components/Education/EducationDetails.js","store/form-data-context.js","components/Education/EducationForm.js","components/Experience/ExperienceDetails.js","components/Experience/ExperienceForm.js","components/Personal/PersonalDetails.js","components/Personal/PersonalForm.js","components/Header/Header.js","components/Card/Card.js","components/Buttons/AddButton.js","components/Buttons/PreviewButton.js","components/Cv/ExperienceCv.js","components/Cv/EducationCv.js","components/Cv/Cv.js","components/App/App.js","index.js"],"names":["SubmitButton","props","type","value","className","onClick","submitForm","DeleteButton","clicked","EditButton","EducationDetails","action","htmlFor","schoolName","studyTitle","fromDate","toDate","onEdit","uuidv4","onDelete","FormDataContext","createContext","personal","firstName","lastName","email","phone","education","experience","addPersonalData","addEducationData","addExperienceData","FormDataContextProvider","useState","educationData","setEducationData","experienceData","setExperienceData","personalData","setPersonalData","context","prevState","Provider","children","EducationForm","dataCtx","useContext","currentDataArray","filter","data","id","editMode","setEditMode","isEditing","current","setCurrent","console","log","changeHandler","event","target","name","placeholder","onChange","e","preventDefault","Object","values","some","input","alert","validateForm","prev","dataIndex","findIndex","ExperienceDetails","companyName","positionTitle","mainTasks","ExperienceForm","PersonalDetails","PersonalForm","storedEditMode","localStorage","getItem","useEffect","setItem","Header","Card","AddButton","addComponent","PreviewButton","previewHandler","length","ExperienceCv","EducationCv","Cv","educationCvList","educationIds","map","newData","experienceCvList","experienceIds","App","removeItem","setEducationIds","setExperienceIds","addComponentHandler","newId","prevEducationIds","prevExperienceIds","deleteComponentHandler","previousEducationIds","key","previousExperienceIds","educationForms","experienceForms","isPreview","setPreview","buttonPosition","setButtonPosition","classList","contains","style","left","transform","parentElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.522d7b33.chunk.js","sourcesContent":["function SubmitButton(props) {\r\n  return (\r\n    <input\r\n      type=\"submit\"\r\n      value=\"Submit\"\r\n      className=\"submit-button\"\r\n      onClick={props.submitForm}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SubmitButton;\r\n","function DeleteButton(props) {\r\n  return (\r\n    <button className=\"delete-button\" onClick={props.clicked}>\r\n      Delete\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;\r\n","function EditButton(props) {\r\n  return (\r\n    <button className=\"edit-button\" onClick={props.clicked}>\r\n      Edit\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default EditButton;\r\n","import EditButton from '../Buttons/EditButton';\r\nimport DeleteButton from '../Buttons/DeleteButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction EducationDetails(props) {\r\n  const editFormHandler = () => {\r\n    props.onEdit();\r\n  };\r\n  const deleteHandler = () => {\r\n    props.onDelete();\r\n  };\r\n  return (\r\n    <div className=\"education-cont\">\r\n      <h1>Education Details</h1>\r\n      <form action=\"submit\" className=\"education-form\">\r\n        <label htmlFor=\"school-name\" className=\"school-name\">\r\n          School Name\r\n        </label>\r\n        <p>{props.schoolName}</p>\r\n        <label htmlFor=\"position-title\" className=\"study-title\">\r\n          Study Title\r\n        </label>\r\n        <p>{props.studyTitle}</p>\r\n        <h3>Date of Study</h3>\r\n        <label htmlFor=\"from\">From :</label>\r\n        <label htmlFor=\"to\">To :</label>\r\n        <p>{props.fromDate}</p>\r\n        <p>{props.toDate}</p>\r\n      </form>\r\n      {[\r\n        <EditButton key={uuidv4()} clicked={editFormHandler} />,\r\n        <DeleteButton key={uuidv4()} clicked={deleteHandler} />,\r\n      ]}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationDetails;\r\n","import { createContext, useState } from 'react';\r\n\r\nconst FormDataContext = createContext({\r\n  personal: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n  },\r\n  education: [],\r\n  experience: [],\r\n  addPersonalData: () => {},\r\n  addEducationData: () => {},\r\n  addExperienceData: () => {},\r\n});\r\n\r\nexport function FormDataContextProvider(props) {\r\n  const [educationData, setEducationData] = useState([]);\r\n  const [experienceData, setExperienceData] = useState([]);\r\n  const [personalData, setPersonalData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n  });\r\n  const addPersonalDataHandler = (personalData) => {\r\n    setPersonalData(personalData);\r\n  };\r\n\r\n  const addEducationDataHandler = (educationData) => {\r\n    setEducationData((prevState) => [...prevState, educationData]);\r\n  };\r\n  const addExperienceDataHandler = (experienceData) => {\r\n    setExperienceData((prevState) => [...prevState, experienceData]);\r\n  };\r\n  const context = {\r\n    personal: {\r\n      firstName: personalData.firstName,\r\n      lastName: personalData.lastName,\r\n      email: personalData.email,\r\n      phone: personalData.phone,\r\n    },\r\n    education: educationData,\r\n    experience: experienceData,\r\n    addPersonalData: addPersonalDataHandler,\r\n    addEducationData: addEducationDataHandler,\r\n    addExperienceData: addExperienceDataHandler,\r\n  };\r\n\r\n  return (\r\n    <FormDataContext.Provider value={context}>\r\n      {props.children}\r\n    </FormDataContext.Provider>\r\n  );\r\n}\r\n\r\nexport default FormDataContext;\r\n","import SubmitButton from '../Buttons/SubmitButton';\r\nimport DeleteButton from '../Buttons/DeleteButton';\r\nimport { useState, useContext, useRef } from 'react';\r\nimport EducationDetails from './EducationDetails';\r\nimport FormDataContext from '../../store/form-data-context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction EducationForm(props) {\r\n  const dataCtx = useContext(FormDataContext);\r\n  const currentDataArray = dataCtx.education.filter(\r\n    (data) => data.id === props.id\r\n  );\r\n  const [editMode, setEditMode] = useState(true);\r\n  const [current, setCurrent] = useState(\r\n    currentDataArray[0] || {\r\n      id: props.id,\r\n      isEditing: editMode,\r\n      schoolName: '',\r\n      studyTitle: '',\r\n      fromDate: '',\r\n      toDate: '',\r\n    }\r\n  );\r\n  console.log(current);\r\n  const detailsEditButton = () => {\r\n    setEditMode((prev) => !prev);\r\n    current.isEditing = true;\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrent((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  function validateForm() {\r\n    const inputs = Object.values(current);\r\n    if (inputs.some((input) => input === '')) {\r\n      alert('Please fill all inputs');\r\n      return true;\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) return;\r\n    setEditMode((prev) => !prev);\r\n    current.isEditing = false;\r\n    if (!dataCtx.education.some((data) => data.id === props.id)) {\r\n      dataCtx.addEducationData(current);\r\n    } else {\r\n      const dataIndex = dataCtx.education.findIndex(\r\n        (data) => data.id === props.id\r\n      );\r\n      dataCtx.education[dataIndex] = current;\r\n    }\r\n  };\r\n  const { id, onDelete } = props;\r\n  if (!current.isEditing) {\r\n    return (\r\n      <EducationDetails\r\n        key={uuidv4()}\r\n        schoolName={current.schoolName}\r\n        studyTitle={current.studyTitle}\r\n        fromDate={current.fromDate}\r\n        toDate={current.toDate}\r\n        onEdit={detailsEditButton}\r\n        onDelete={() => onDelete('education', id)}\r\n      ></EducationDetails>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"education-cont\">\r\n      <h1>Education Form</h1>\r\n      <form action=\"submit\" className=\"education-form\">\r\n        <label htmlFor=\"school-name\" className=\"school-name\">\r\n          School Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"schoolName\"\r\n          placeholder=\"Enter School Name\"\r\n          className=\"school-name-input\"\r\n          value={current.schoolName}\r\n          onChange={changeHandler}\r\n        />\r\n        <label htmlFor=\"position-title\" className=\"study-title\">\r\n          Study Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"studyTitle\"\r\n          placeholder=\"Enter Study Title\"\r\n          className=\"study-title-input\"\r\n          value={current.studyTitle}\r\n          onChange={changeHandler}\r\n        />\r\n        <h3>Date of Study</h3>\r\n        <label htmlFor=\"from\">From :</label>\r\n        <label htmlFor=\"to\">To :</label>\r\n        <input\r\n          name=\"fromDate\"\r\n          value={current.fromDate}\r\n          onChange={changeHandler}\r\n          type=\"date\"\r\n        />\r\n        <input\r\n          name=\"toDate\"\r\n          value={current.toDate}\r\n          onChange={changeHandler}\r\n          type=\"date\"\r\n        />\r\n      </form>\r\n      {[\r\n        <SubmitButton key={uuidv4()} submitForm={submitHandler}></SubmitButton>,\r\n        <DeleteButton\r\n          key={uuidv4()}\r\n          clicked={() => onDelete('education', id)}\r\n        />,\r\n      ]}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationForm;\r\n","import EditButton from '../Buttons/EditButton';\r\nimport DeleteButton from '../Buttons/DeleteButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ExperienceDetails(props) {\r\n  const editFormHandler = () => {\r\n    props.onEdit();\r\n  };\r\n  const deleteHandler = () => {\r\n    props.onDelete();\r\n  };\r\n  return (\r\n    <div className=\"experience-cont\">\r\n      <h1>Experience Details</h1>\r\n      <form action=\"submit\" className=\"experience-form\">\r\n        <label htmlFor=\"company-name\" className=\"company-name\">\r\n          Company Name\r\n        </label>\r\n        <p>{props.companyName}</p>\r\n        <label htmlFor=\"position-title\" className=\"position-title\">\r\n          Position Title\r\n        </label>\r\n        <p>{props.positionTitle}</p>\r\n        <label htmlFor=\"main-tasks\" className=\"main-tasks\">\r\n          Main Tasks of the Job\r\n        </label>\r\n        <p className=\"main-tasks-input\">{props.mainTasks}</p>\r\n        <label htmlFor=\"from\">From :</label>\r\n        <label htmlFor=\"to\">To :</label>\r\n        <p>{props.fromDate}</p>\r\n        <p>{props.toDate}</p>\r\n      </form>\r\n      {[\r\n        <EditButton key={uuidv4()} clicked={editFormHandler} />,\r\n        <DeleteButton key={uuidv4()} clicked={deleteHandler} />,\r\n      ]}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExperienceDetails;\r\n","import SubmitButton from '../Buttons/SubmitButton';\r\nimport DeleteButton from '../Buttons/DeleteButton';\r\nimport ExperienceDetails from './ExperienceDetails';\r\nimport FormDataContext from '../../store/form-data-context';\r\nimport { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ExperienceForm(props) {\r\n  const dataCtx = useContext(FormDataContext);\r\n  const currentDataArray = dataCtx.experience.filter(\r\n    (data) => data.id === props.id\r\n  );\r\n  const [editMode, setEditMode] = useState(true);\r\n  const [current, setCurrent] = useState(\r\n    currentDataArray[0] || {\r\n      id: props.id,\r\n      isEditing: editMode,\r\n      companyName: '',\r\n      positionTitle: '',\r\n      mainTasks: '',\r\n      fromDate: '',\r\n      toDate: '',\r\n    }\r\n  );\r\n\r\n  const detailsEditHandler = () => {\r\n    setEditMode((prev) => !prev);\r\n    current.isEditing = true;\r\n    // localStorage.setItem('isEditMode', '1');\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrent((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  function validateForm() {\r\n    const inputs = Object.values(current);\r\n    if (inputs.some((input) => input === '')) {\r\n      alert('Please fill all inputs');\r\n      return true;\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) return;\r\n    setEditMode((prev) => !prev);\r\n    current.isEditing = false;\r\n    // localStorage.setItem('isEditMode', '0');\r\n    if (!dataCtx.experience.some((data) => data.id === props.id)) {\r\n      dataCtx.addExperienceData(current);\r\n    } else {\r\n      const dataIndex = dataCtx.experience.findIndex(\r\n        (data) => data.id === props.id\r\n      );\r\n      dataCtx.experience[dataIndex] = current;\r\n    }\r\n  };\r\n  const { id, onDelete } = props;\r\n  if (!current.isEditing) {\r\n    return (\r\n      <ExperienceDetails\r\n        key={uuidv4()}\r\n        companyName={current.companyName}\r\n        positionTitle={current.positionTitle}\r\n        mainTasks={current.mainTasks}\r\n        fromDate={current.fromDate}\r\n        toDate={current.toDate}\r\n        onEdit={detailsEditHandler}\r\n        onDelete={() => onDelete('experience', id)}\r\n      ></ExperienceDetails>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"experience-cont\">\r\n      <h1>Experience Form</h1>\r\n      <form action=\"submit\" className=\"experience-form\">\r\n        <label htmlFor=\"company-name\" className=\"company-name\">\r\n          Company Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"companyName\"\r\n          placeholder=\"Enter Company Name\"\r\n          className=\"company-name-input\"\r\n          value={current.companyName}\r\n          onChange={changeHandler}\r\n        />\r\n        <label htmlFor=\"position-title\" className=\"position-title\">\r\n          Position Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"positionTitle\"\r\n          placeholder=\"Enter Position Title\"\r\n          className=\"position-title-input\"\r\n          value={current.positionTitle}\r\n          onChange={changeHandler}\r\n        />\r\n        <label htmlFor=\"main-tasks\" className=\"main-tasks\">\r\n          Main Tasks of the Job\r\n        </label>\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"mainTasks\"\r\n          className=\"main-tasks-input\"\r\n          placeholder=\"Enter your main tasks of this job\"\r\n          value={current.mainTasks}\r\n          onChange={changeHandler}\r\n        />\r\n        <label htmlFor=\"from\">From :</label>\r\n        <label htmlFor=\"to\">To :</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"fromDate\"\r\n          value={current.fromDate}\r\n          onChange={changeHandler}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"toDate\"\r\n          value={current.toDate}\r\n          onChange={changeHandler}\r\n        />\r\n      </form>\r\n      {[\r\n        <SubmitButton key={uuidv4()} submitForm={submitHandler}></SubmitButton>,\r\n        <DeleteButton\r\n          key={uuidv4()}\r\n          clicked={() => onDelete('experience', id)}\r\n        />,\r\n      ]}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExperienceForm;\r\n","import EditButton from '../Buttons/EditButton';\r\nfunction PersonalDetails(props) {\r\n  const editFormHandler = () => {\r\n    props.onEdit();\r\n  };\r\n  return (\r\n    <div className=\"personal-details\">\r\n      <h1>Personal Information</h1>\r\n      <div className=\"details-container\">\r\n        <h2 className=\"first-name\">First Name</h2>\r\n        <p>{props.firstName}</p>\r\n        <h2 className=\"last-name\">Last Name</h2>\r\n        <p>{props.lastName}</p>\r\n        <h2 className=\"email\">E-Mail</h2>\r\n        <p>{props.email}</p>\r\n        <h2 className=\"phone-number\">Phone Number</h2>\r\n        <p>{props.phone}</p>\r\n      </div>\r\n      <EditButton clicked={editFormHandler}></EditButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalDetails;\r\n","import SubmitButton from '../Buttons/SubmitButton';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport PersonalDetails from './PersonalDetails';\r\nimport FormDataContext from '../../store/form-data-context';\r\nfunction PersonalForm() {\r\n  const [editMode, setEditMode] = useState(true);\r\n  const dataCtx = useContext(FormDataContext);\r\n  const storedEditMode = localStorage.getItem('personalIsEditing');\r\n  useEffect(() => {\r\n    if (storedEditMode === '0') {\r\n      setEditMode(false);\r\n    } else if (storedEditMode === '1') {\r\n      setEditMode(true);\r\n    }\r\n  }, [storedEditMode]);\r\n  const detailsEditButton = () => {\r\n    setEditMode((prev) => !prev);\r\n    localStorage.setItem('personalIsEditing', '1');\r\n  };\r\n  function validateForm() {\r\n    const inputs = Object.values(dataCtx.personal);\r\n    if (inputs.some((input) => input === '')) {\r\n      alert('Please fill all inputs');\r\n      return true;\r\n    }\r\n  }\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (validateForm()) return;\r\n    setEditMode((prev) => !prev);\r\n    localStorage.setItem('personalIsEditing', '0');\r\n  };\r\n  const changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    dataCtx.addPersonalData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const { firstName, lastName, email, phone } = dataCtx.personal;\r\n  if (!editMode) {\r\n    return (\r\n      <PersonalDetails\r\n        firstName={firstName}\r\n        lastName={lastName}\r\n        email={email}\r\n        phone={phone}\r\n        onEdit={detailsEditButton}\r\n      ></PersonalDetails>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Personal Information</h1>\r\n      <form action=\"submit\" className=\"personal-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\"First Name\"\r\n          value={dataCtx.personal.firstName}\r\n          onChange={changeHandler}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last Name\"\r\n          value={dataCtx.personal.lastName}\r\n          onChange={changeHandler}\r\n        />\r\n\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"E-Mail\"\r\n          value={dataCtx.personal.email}\r\n          onChange={changeHandler}\r\n        />\r\n\r\n        <input\r\n          name=\"phone\"\r\n          type=\"tel\"\r\n          placeholder=\"Phone Number\"\r\n          value={dataCtx.personal.phone}\r\n          onChange={changeHandler}\r\n        />\r\n      </form>\r\n      <SubmitButton submitForm={submitHandler}></SubmitButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalForm;\r\n","function Header(props) {\r\n  return (\r\n    <header>\r\n      <h1>CV FORM</h1>\r\n      <h2>Made by Sanberk Türker</h2>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function Card(props) {\r\n  return <div className=\"card\">{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","function AddButton(props) {\r\n  return (\r\n    <button className=\"add-button\" onClick={props.addComponent}>\r\n      Add\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AddButton;\r\n","import { useContext } from 'react';\r\nimport FormDataContext from '../../store/form-data-context';\r\nfunction PreviewButton(props) {\r\n  const dataCtx = useContext(FormDataContext);\r\n  function validateForm() {\r\n    if (dataCtx.education.length === 0) {\r\n      alert('Please add education info');\r\n      return true;\r\n    } else if (dataCtx.experience.length === 0) {\r\n      alert('Please add experience info');\r\n      return true;\r\n    }\r\n  }\r\n  const previewHandler = (e) => {\r\n    if (validateForm()) return;\r\n    props.onClick(e);\r\n  };\r\n  return (\r\n    <div onClick={(e) => previewHandler(e)} className=\"preview-button\">\r\n      <p>{'>>'}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreviewButton;\r\n","function ExperienceCv(props) {\r\n  return (\r\n    <div className=\"experience-cv-container\">\r\n      <div className=\"job-info\">\r\n        <div className=\"company-cont\">\r\n          <h2>Company Name:</h2>\r\n          <h2>{props.experienceData.companyName}</h2>\r\n        </div>\r\n        <div className=\"position-cont\">\r\n          <h2>Position Title:</h2>\r\n          <h2>{props.experienceData.positionTitle}</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"experience-cv-date\">\r\n        <h2> {props.experienceData.fromDate}</h2>\r\n        <h2>-</h2>\r\n        <h2>{props.experienceData.toDate}</h2>\r\n      </div>\r\n      <div className=\"main-task-cv-container\">\r\n        <h2 className=\"main-task-cv\">Main Tasks</h2>\r\n        <p>{props.experienceData.mainTasks}</p>\r\n      </div>\r\n      <div className=\"test\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExperienceCv;\r\n","function EducationCv(props) {\r\n  return (\r\n    <div className=\"education-cv\">\r\n      <div className=\"school-cv\">\r\n        <h2>School Name: {props.educationData.schoolName}</h2>\r\n        <h2>Study Title: {props.educationData.studyTitle}</h2>\r\n      </div>\r\n      <h2>\r\n        {props.educationData.fromDate} --- {props.educationData.toDate}\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\nexport default EducationCv;\r\n","import ExperienceCv from './ExperienceCv';\r\nimport EducationCv from './EducationCv';\r\nimport Card from '../Card/Card';\r\nimport { useContext } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport FormDataContext from '../../store/form-data-context';\r\nfunction Cv(props) {\r\n  const dataCtx = useContext(FormDataContext);\r\n  const educationCvList = props.educationIds.map((id) => {\r\n    let newData = dataCtx.education.filter((data) => data.id === id);\r\n    return <EducationCv key={uuidv4()} educationData={newData[0]} />;\r\n  });\r\n  const experienceCvList = props.experienceIds.map((id) => {\r\n    let newData = dataCtx.experience.filter((data) => data.id === id);\r\n    return <ExperienceCv key={uuidv4()} experienceData={newData[0]} />;\r\n  });\r\n  console.log(dataCtx.experience);\r\n  return (\r\n    <div>\r\n      <Card className=\"cv-container\">\r\n        <div className=\"personal-cv\">\r\n          <h1>\r\n            {dataCtx.personal.firstName} {dataCtx.personal.lastName}\r\n          </h1>\r\n          <div>\r\n            <h2>{dataCtx.personal.email}</h2>\r\n            <h2>{dataCtx.personal.phone}</h2>\r\n          </div>\r\n        </div>\r\n        <h1 className=\"education\">Education</h1>\r\n        {educationCvList}\r\n        <h1 className=\"experience-cv-title\">Experience</h1>\r\n        {experienceCvList}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cv;\r\n","import EducationForm from '../Education/EducationForm';\r\nimport ExperienceForm from '../Experience/ExperienceForm';\r\nimport PersonalForm from '../Personal/PersonalForm';\r\nimport Header from '../Header/Header';\r\nimport Card from '../Card/Card';\r\nimport React, { useState } from 'react';\r\nimport AddButton from '../Buttons/AddButton';\r\nimport PreviewButton from '../Buttons/PreviewButton';\r\nimport Cv from '../Cv/Cv';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nfunction App() {\r\n  localStorage.removeItem('isEditMode');\r\n  const [educationIds, setEducationIds] = useState([]);\r\n  const [experienceIds, setExperienceIds] = useState([]);\r\n  const addComponentHandler = (type) => {\r\n    if (type === 'education') {\r\n      let newId = uuidv4();\r\n      setEducationIds((prevEducationIds) => [...prevEducationIds, newId]);\r\n    } else {\r\n      let newId = uuidv4();\r\n      setExperienceIds((prevExperienceIds) => [...prevExperienceIds, newId]);\r\n    }\r\n  };\r\n  const deleteComponentHandler = (type, id) => {\r\n    if (type === 'education') {\r\n      setEducationIds((previousEducationIds) => {\r\n        let deletedList = previousEducationIds.filter((key) => key !== id);\r\n        return deletedList;\r\n      });\r\n    } else {\r\n      setExperienceIds((previousExperienceIds) => {\r\n        let deletedList = previousExperienceIds.filter((key) => key !== id);\r\n        return deletedList;\r\n      });\r\n    }\r\n  };\r\n\r\n  const educationForms = educationIds.map((id) => (\r\n    <EducationForm key={id} id={id} onDelete={deleteComponentHandler} />\r\n  ));\r\n  const experienceForms = experienceIds.map((id) => (\r\n    <ExperienceForm key={id} id={id} onDelete={deleteComponentHandler} />\r\n  ));\r\n\r\n  const changeToPreview = (e) => {\r\n    if (\r\n      e.target.classList.contains('preview-button') &&\r\n      buttonPosition === 'right'\r\n    ) {\r\n      setButtonPosition('left');\r\n      e.target.style.left = '0';\r\n      e.target.style.transform = 'scale(-1,-1)';\r\n    } else if (\r\n      e.target.classList.contains('preview-button') &&\r\n      buttonPosition === 'left'\r\n    ) {\r\n      setButtonPosition('right');\r\n      e.target.style.left = '';\r\n      e.target.style.transform = 'scale(1,-1)';\r\n    } else if (\r\n      e.target.parentElement.classList.contains('preview-button') &&\r\n      buttonPosition === 'right'\r\n    ) {\r\n      setButtonPosition('left');\r\n      e.target.parentElement.style.left = '0';\r\n      e.target.parentElement.style.transform = 'scale(-1,-1)';\r\n    } else if (\r\n      e.target.parentElement.classList.contains('preview-button') &&\r\n      buttonPosition === 'left'\r\n    ) {\r\n      setButtonPosition('right');\r\n      e.target.parentElement.style.left = '';\r\n      e.target.parentElement.style.transform = 'scale(1,-1)';\r\n    }\r\n    setPreview((prevState) => !prevState);\r\n  };\r\n  // State Hooks\r\n  const [isPreview, setPreview] = useState(false);\r\n  const [buttonPosition, setButtonPosition] = useState('right');\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      {!isPreview ? (\r\n        <div className=\"main-container\">\r\n          <Card>\r\n            <PersonalForm></PersonalForm>\r\n          </Card>\r\n          <Card>\r\n            <h1>Education</h1>\r\n            {educationForms}\r\n            {\r\n              <AddButton\r\n                addComponent={() => addComponentHandler('education')}\r\n              />\r\n            }\r\n          </Card>\r\n          <Card>\r\n            <h1>Experience</h1>\r\n            {experienceForms}\r\n            {\r\n              <AddButton\r\n                addComponent={() => addComponentHandler('experience')}\r\n              />\r\n            }\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <Cv educationIds={educationIds} experienceIds={experienceIds}></Cv>\r\n      )}\r\n      <PreviewButton onClick={changeToPreview}></PreviewButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './components/App/App';\nimport { FormDataContextProvider } from './store/form-data-context';\nReactDOM.render(\n  <FormDataContextProvider>\n    <App />\n  </FormDataContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}